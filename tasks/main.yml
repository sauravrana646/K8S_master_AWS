---
# tasks file for k8s_master
- name : Setup k8s repo
  copy :
      src : kubernetes.repo
      dest : /etc/yum.repos.d/kubernetes.repo

- name : Install packages
  package :
      name  : [docker,kubeadm,kubelet,kubectl,iproute-tc]
      state : present

- name : Start docker and kubelet services
  service :
      name : "{{ item }}"
      state : started
      enabled : yes
  with_items :
      - docker
      - kubelet

- name: Set bridge-nf ip6tables to 1
  sysctl:
      name: net.bridge.bridge-nf-call-ip6tables
      value: 1
      state: present

- name: set bridge-nf iptables to 1
  sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: 1
      state: present

- name : Change docker Cgroup Driver
  copy :
      src : docker_driver.json
      dest : /etc/docker/daemon.json
  notify : restart_docker_service

- name : Initialize the cluster
  shell : "kubeadm init --pod-network-cidr={{pod_ip_cidr}} --ignore-preflight-errors=NumCPU,Mem >> init.txt"
  args :
    chdir : $HOME
    creates : init.txt


- name : Create Kube Directory
  file :
    path : $HOME/.kube
    state : directory
    owner : root
    mode : 640
- name : Copy admin.conf
  copy:
      src: /etc/kubernetes/admin.conf
      dest: $HOME/.kube/config
      remote_src: yes
      owner: root
- name : Download Overlay Network File
  template :
    src : kube-flannel.yml.jinja
    dest : $HOME/kube-flannel.yml

- name: Setup Overlay network
  shell: kubectl apply -f kube-flannel.yml >> overlay_network_setup.txt
  args:
    chdir: $HOME
    creates: overlay_network_setup.txt

- name: get join command
  shell: kubeadm token create --print-join-command
  register: join_command
  changed_when : false

- name: set fact join command
  set_fact:
    join_command: "{{ join_command.stdout_lines[0] }}"

- name : Printing Hostvars test
  debug :
    msg : "{{ hostvars[groups['tag_Name_Master_k8s'][0]].join_command }}"
